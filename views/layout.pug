doctype html
html(lang='en')
  head
    // Required meta tags
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, initial-scale=1, shrink-to-fit=no')
    title ditExplorer
    // plugins:css
    link(rel='stylesheet', href='/vendors/iconfonts/mdi/css/materialdesignicons.min.css')
    link(rel='stylesheet', href='/vendors/css/vendor.bundle.base.css')
    link(rel='stylesheet', href='/vendors/css/vendor.bundle.addons.css')
    // endinject
    // plugin css for this page
    // End plugin css for this page
    // inject:css
    link(rel='stylesheet', href='/css/style.css')
    link(rel='stylesheet', href='/css/jquery.toast.css')
    // endinject
    link(rel='shortcut icon', href='/images/favicon.png')
    script(src='/js/jquery-3.4.1.min.js')
    script(src='/js/socket.io.js')
    script(src='/js/jquery.toast.js')
    //script(src='/js/pnglib.js')
    //script(src='/js/identicon.js')
  body
    .container-scroller
      // partial:/partials/_navbar.html
      nav.navbar.default-layout.col-lg-12.col-12.p-0.fixed-top.d-flex.flex-row
        .text-center.navbar-brand-wrapper.d-flex.align-items-top.justify-content-center
          //a(href='/')
            span ditCraft
          a(href='/welcome')
            img.top-logo.rounded-circle(src='/images/logo.png', alt='logo')
          //a.navbar-brand.brand-logo-mini(href='/index.html')
            img(src='/images/logo-mini.svg', alt='logo')
        .navbar-menu-wrapper.d-flex.align-items-center
          ul.navbar-nav.navbar-nav-left.header-links.d-none.d-md-flex
            li.nav-item
              a.nav-link(href='https://ditcraft.io' target="_blank")
                i.mdi.mdi-link
                | ditcraft.io
            li.nav-item.active
              a.nav-link(href='https://twitter.com/ditcraft' target="_blank")
                i.mdi.mdi-twitter
                | @ditcraft
          ul.navbar-nav.navbar-nav-right
            li#navBarSearch.d-none.d-lg-block
              .input-group
                input#searchText.form-control(type='text', placeholder='Search address...', aria-label='Search address...', aria-describedby='colored-addon3')
                #searchButton.input-group-append.bg-primary.border-primary
                  span.input-group-text.bg-transparent
                    i.mdi.mdi-magnify.text-white
            li.nav-item
                if user && user.provider === 'twitter' || user && user.provider === 'github'
                  li.nav-item.dropdown.d-inline-block
                    a#UserDropdown.nav-link.dropdown-toggle(href='#', data-toggle='dropdown', aria-expanded='false')
                      span.profile-text #{user.displayName}
                      img.img-xs.rounded-circle(src=''+ user.photos[0].value, alt='Twitter profile picture')
                    .dropdown-menu.dropdown-menu-right.navbar-dropdown(aria-labelledby='UserDropdown', style="padding: 0px;")
                      a.dropdown-item.mt-2(href="/address/" + user.eth_address)
                        i.mdi.mdi-account
                        | Profile
                      a.dropdown-item(href="/logout")
                        i.mdi.mdi-logout
                        | Sign Out
                else
                  li.nav-item.dropdown.d-inline-block
                    a#UserDropdown.nav-link.dropdown-toggle(href='#', data-toggle='dropdown', aria-expanded='false')
                      i.mdi.mdi-login
                      | Log in
                    .dropdown-menu.dropdown-menu-right.navbar-dropdown(aria-labelledby='UserDropdown', style="padding: 0px;")
                      a.dropdown-item(href="/login/twitter")
                        i.mdi.mdi-twitter
                        | Twitter
                      a.dropdown-item(href="/login/github")
                        i.mdi.mdi-github-circle
                        | GitHub
          button.navbar-toggler.navbar-toggler-right.d-lg-none.align-self-center(type='button', data-toggle='offcanvas')
            span.mdi.mdi-menu
      // partial
      .container-fluid.page-body-wrapper
        // partial:/partials/_sidebar.html
        nav#sidebar.sidebar.sidebar-offcanvas
          ul.nav
            li#sidebarSearch.d-lg-none
              .input-group
                input#searchTextSidebar.form-control(type='text', placeholder='Search address...', aria-label='Search address...', aria-describedby='colored-addon3')
                #searchButtonSidebar.input-group-append.bg-secondary
                  span.input-group-text.bg-transparent
                    i.mdi.mdi-magnify.text-white
            //li.nav-item
              a.nav-link(data-toggle='collapse', href='#discover', aria-expanded='false', aria-controls='ui-basic')
                i.menu-icon.mdi.mdi-compass
                span.menu-title Discover
                i.menu-arrow
              #discover.collapse
                ul.nav.flex-column.sub-menu
                  li.nav-item
                    a.nav-link(href='/repositories')
                      i.menu-icon.mdi.mdi-folder
                      span.menu-title Repositories    
                  //li.nav-item
                    a.nav-link(href='/discover/contributors')
                      i.menu-icon.mdi.mdi-account-multiple
                      span.menu-title Contributors
            if user && user.provider === 'twitter' || user && user.provider === 'github'
              li.nav-item
                a.nav-link(href='/start')
                  i.menu-icon.mdi.mdi-play-circle
                  span.menu-title Start 
            li.nav-item
              a.nav-link(href='/repositories')
                i.menu-icon.mdi.mdi-folder
                span.menu-title Repositories 
            li.nav-item
              a.nav-link(href='/proposals')
                i.menu-icon.mdi.mdi-file-document
                span.menu-title Proposals
            //li.nav-item
              a.nav-link(href='/labels')
                i.menu-icon.mdi.mdi-tag
                span.menu-title Labels
          .mode
            button.btn.btn-toggle.active(type='button', onclick="toggleMode()", data-toggle='button', aria-pressed='true', autocomplete='demo')
              .handle
        // partial
        .main-panel
          .content-wrapper
            block content
          // content-wrapper ends
          // partial:/partials/_footer.html
          footer.footer
            .container-fluid.clearfix
              span.text-muted.d-block.text-center.text-sm-left.d-sm-inline-block
                | Copyright Â© 2019 &#32;
                a(href='https://ditcraft.io', target='_blank') ditCraft
                | . All rights reserved.
              //span.float-none.float-sm-right.d-block.mt-1.mt-sm-0.text-center
                a(href='https://ditcraft.io', target='_blank') Imprint
          // partial
          // main-panel ends
          // page-body-wrapper ends
          // container-scroller
          // plugins:js
          script(src='/vendors/js/vendor.bundle.base.js')
          script(src='/vendors/js/vendor.bundle.addons.js')
          // endinject
          // Plugin js for this page
          // End plugin js for this page
          // inject:js
          script(src='/js/off-canvas.js')
          script(src='/js/misc.js')
          script.
            $('#searchText, #searchTextSidebar').keypress(function(event){
              var keycode = (event.keyCode ? event.keyCode : event.which);
              if(keycode == '13'){
                window.location.href = '/address/' + $('#searchText, #searchTextSidebar').val();
              }
            });

            $('#searchButton, #searchButtonSidebar').on('click',function(){
              window.location.href = '/address/' + $('#searchText, #searchButtonSidebar').val();
            });
          // endinject
          // Custom js for this page
          // End custom js for this page
  script.
    if(!readCookie("mode")){
      createCookie("mode", "demo");
    }
    
    if(readCookie("mode") === "live"){
      $('.mode button').removeClass('active');
    } else if (readCookie("mode") === "demo"){
      $('.mode button').addClass('active');
    }
    
    function toggleMode(){
      /*$.get( "/toggleMode", function(data) {
        console.log('data: ', data);
      });*/

      if(readCookie("mode") === "live"){
        createCookie("mode", "demo");
      } else if (readCookie("mode") === "demo"){
        createCookie("mode", "live");
      }
      location.reload();
    }

    function createCookie(name, value, days) {
      if (days) {
          var date = new Date();
          date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
          var expires = "; expires=" + date.toGMTString();
      }
      else var expires = "";               

      document.cookie = name + "=" + value + expires + "; path=/";
    }

    function readCookie(name) {
        var nameEQ = name + "=";
        var ca = document.cookie.split(';');
        for (var i = 0; i < ca.length; i++) {
            var c = ca[i];
            while (c.charAt(0) == ' ') c = c.substring(1, c.length);
            if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);
        }
        return null;
    }

    function eraseCookie(name) {
      createCookie(name, "", -1);
    }